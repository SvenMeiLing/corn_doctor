/myflasky(项目根目录名称)

    /app(应用程序主目录)

        /models:
            定义数据表模型
        /utils:
            存放工具函数, 如 调用接口识别图像 从响应中提取关键信息 检查登陆状态

        /db:
            存放一些数据文件, 以及链接数据库的脚本
            database.py:
                定义了 获取数据库连接的函数, 初始化数据表的函数...
            redis_session:
                定义了 连接redis数据库的函数

        /cache:
            存放一个函数, 是用于大批量数据获取下, 降低性能消耗和迅速反馈结果的缓存函数

        /views:
            定义了若干个 `可插拔试图`, 是路由运行的主逻辑代码
            请求主要是 对于各自页面的get请求以及post请求, 登录页面已经更改成了通过index页面登录
        /instance:
            存放了黑名单列表, 以及此程序的配置文件flask_app.yaml
        /logs:
            存放程序运行日志, 记录一些用户识别结果, 供后期出错可以即使分析
        /scripts:
            写了一些程序中使用到的便捷脚本工具
        /upload:
            存放用户上传的图片, 如果后期遇到严重问题可以以此存档作为依据
        /video:
            存放两个视频, 一个是用户输入进来的待识别视频, 一个是输出给用户的反馈结果的视频
        /vision:
            存放已经训练好的模型, 和视觉算法识别的脚本: "image_analysis.py"

        create_app.py:
            加载配置文件, 执行初始化(数据库, session, )
            注册一个响应结束时的操作(关闭各个数据库连接)
            注册两个蓝图(user, file), 并在此之前已经添加好了url
            并return一个app


    /static:
        存放静态文件如 bootstrap, jquery, 所需依赖
    /templates:
        存放模板文件如 html

    main.py:
        通过导入create_app.py的函数创建一个app
        这是程序的主入口, 必须从这里启动





